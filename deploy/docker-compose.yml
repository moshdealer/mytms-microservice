services:
  postgres:
    image: postgres:15-alpine
    container_name: tms-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - tms-network

  zookeeper:
    image: arm64v8/zookeeper
    container_name: tms-zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
    networks:
      - tms-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: tms-kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: ${ZOOKEEPER_HOST}
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_BROKER_INTERNAL},PLAINTEXT_HOST://${KAFKA_BROKER_EXTERNAL}:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - tms-network

  auth-service:
    build: ../auth-service
    container_name: auth-service
    ports:
      - "${AUTH_SERVICE_PORT}:8081"
    depends_on:
      - postgres
    networks:
      - tms-network

  testcase-service:
    build: ../testcase-service
    container_name: testcase-service
    ports:
      - "${TESTCASE_SERVICE_PORT}:8082"
    depends_on:
      - postgres
      - kafka
    networks:
      - tms-network

  testrunner-service:
    build: ../testrunner-service
    container_name: testrunner-service
    ports:
      - "${TESTRUNNER_SERVICE_PORT}:8083"
    depends_on:
      - postgres
      - kafka
    networks:
      - tms-network

  report-service:
    build: ../report-service
    container_name: report-service
    ports:
      - "${REPORT_SERVICE_PORT}:8084"
    depends_on:
      - postgres
      - testcase-service
    networks:
      - tms-network

volumes:
  postgres_data:

networks:
  tms-network:
    driver: bridge